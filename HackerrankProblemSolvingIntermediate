#!/bin/python3

import math
import os
import random
import re
import sys



#
# Complete the 'authEvents' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts 2D_STRING_ARRAY events as parameter.
#
def h(s):
    f = sum(list(ord(s[x])*(131**(len(s)-x-1)) for x in range(len(s))))
    F = sum(list(ord(s[x])*(131**(len(s)-x)) for x in range(len(s))))
    return f%(10**9+7), F%(10**9+7) 
    
def tester(s, n):
    if h(s)[0] == n:
        return 1
    elif n in range(h(s)[1], h(s)[1]+127):
        return 1
    else:
        return 0
    
    
    

def authEvents(events):
    # Write your code here
    E = events
    S = [E[x][1] for x in range(len(E)) if E[x][0] == 'setPassword']
    A = [E[x][1] for x in range(len(E)) if E[x][0] == 'authorize']
    cnt = -1
    a = []
    for x in range(len(E)):
        if E[x][0] == 'setPassword':
            cnt += 1
            continue
        s, n = S[cnt], int(E[x][1])
        #print(s, n)
        a.append(tester(s, n))
    return a
    

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    events_rows = int(input().strip())
    events_columns = int(input().strip())

    events = []

    for _ in range(events_rows):
        events.append(input().rstrip().split())

    result = authEvents(events)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
